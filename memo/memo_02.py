'''
in:
 tensor([[-0.0443,  0.9784, -0.1755, -0.7413, -0.8790, -0.8056, -1.3639, -1.3706,
          0.3229, -0.5810],
        [-0.7294,  2.0225, -1.5637, -2.3947, -3.9438, -3.6062, -4.1990, -3.4239,
          1.6703,  0.4978],
        [ 0.3554,  1.3596, -1.0004, -2.2733, -2.2905, -3.4393, -3.3270, -2.4125,
          1.4190,  0.2189],
        [ 0.4288, -0.4784, -0.0750, -1.4968, -1.7580, -2.1040, -3.2479, -1.9333,
          1.4032, -0.7940]], device='cuda:0', grad_fn=<AddmmBackward>)





          '''

criterion = torch.nn.MSELoss(reduction='sum')
optimizer = torch.optim.SGD(model.parameters(), lr=1e-4)
for t in range(500):
    # 순전파 단계: 모델에 x를 전달하여 예상되는 y 값을 계산합니다.
    y_pred = model(x)

    # 손실을 계산하고 출력합니다.
    loss = criterion(y_pred, y)
    if t % 100 == 99:
        print(t, loss.item())


